{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MDCL",
	"patterns": [
		{"include": "#keywords"},
		{"include": "#blockComments"},
		{"include": "#strings"},
		{"include": "#rawstrings"},
		{"include": "#regexstringdouble"},
		{"include": "#regexstringsingle"},
		{"include": "#bracketstatement"},
		{"include": "#functions"},
		{"include": "#greyopers"},
		{"include": "#booleans"},
		{"include": "#vars"},
		{"include": "#integers"},
		{"include": "#floats"},
		{"include": "#explicitargs"}
	],
	"tokenColors": {},
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.mdcl",
					"match": "\\b(to|skip|new|if|elif|else|while|for|try|catch|del|import|define|raise|yield|ret|do)\\b"
				},
				{
					"name": "entity.name.method.mdcl",
					"match": "\\b(read|len|readfile|writefile|type|echo|wait|globals|locals|argv|not|exit)\\b"
				},
				{
					"name": "keyword.mdcl",
					"match": "\\b(or|and|in|not)\\b"
				},
				{
					"name": "entity.name.function.mdcl",
					"match": "\\b(Integer|Float|String|RegexString|Timedelta|Date|Slice|Boolean|Array|Alphabet|Null|BreakToken)\\b"
				},
				{
					"name": "entity.name.tag.mdcl",
					"match": "(\\!|ERR|PATH)"
				},
				{
					"name": "entity.name.type.mdcl",
					"match": "\\b(integer|float|string|regex|timedelta|date|slice|boolean|array)\\b"
				}
			]
		},
		"blockComments": {
			"name": "comment.block.mdcl",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"strings": {
			"name": "string.quoted.double.mdcl",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "\\\\."
			}]
		},
		"rawstrings": {
			"name": "string.quoted.double.mdcl",
			"begin": "'",
			"end": "'",
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "\\\\."
			}]
		},
		"regexstringdouble": {
			"name": "keyword.mdcl",
			"begin": "\\bx\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "."
			}]
		},
		"regexstringsingle": {
			"name": "keyword.mdcl",
			"begin": "\\bx'",
			"end": "'",
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "."
			}]
		},
		"bracketstatement": {
			"begin": "\\[",
			"end": "\\]",
			"captures": {
				"0": {"name": "constant.language.mdcl"}
			}
		},
		"functions": {
			"name": "function.mdcl",
			"begin": "([a-zA-Z_]*)( *: *)(\\[)(.*)(\\])( *)(=>)",
			"end": ".",
			"patterns": [{"include": "#bracketstatement"}],
			"beginCaptures": {
				"1": {"name": "entity.name.function.mdcl"},
				"2": {"name": "keyword.mdcl"},
				"3": {"name": "constant.language.mdcl"},
				"5": {"name": "constant.language.mdcl"},
				"7": {"name": "keyword.mdcl"}
			}
		},
		"greyopers": {
			"patterns": [{
				"name": "keyword.mdcl",
				"match": "(:|;|<|>|\\?|\\\\|\\+|-|\\*|/|\\^|%|=|\\|)"
			}]
		},
		"booleans": {
			"patterns": [{
				"name": "constant.language.mdcl",
				"match": "\\b(true|false|null)\\b"
			}]
		},
		"integers": {
			"patterns": [{
				"name": "constant.numeric.mdcl",
				"match": "(-|\\+)*[0-9]+"
			}]
		},
		"floats": {
			"patterns": [{
				"name": "constant.numeric.mdcl",
				"match": "(-|\\+)*[0-9]*\\.[0-9]+"
			}]
		},
		"explicitargs": {
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "\\$[0-9]+"
			}]
		}
	},
	"scopeName": "source.mdcl"
}