{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MDCL",
	"patterns": [
		{"include": "#keywords"},
		{"include": "#blockComments"},
		{"include": "#strings"},
		{"include": "#rawstrings"},
		{"include": "#regexstringdouble"},
		{"include": "#regexstringsingle"},
		{"include": "#slices"},
		{"include": "#greyopers"},
		{"include": "#squigglybrackets"},
		{"include": "#evaluations"},
		{"include": "#vars"},
		{"include": "#integers"},
		{"include": "#floats"},
		{"include": "#explicitargs"}
	],
	"tokenColors": {},
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.mdcl",
					"match": "\\b(AND|OR|ONLY|TO|SKIP|NEW|IF|ELIF|ELSE|WHILE|FOR|TRY|CATCH|DEL|IMPORT|UNIMPORT|DEFINE|SIG|RAISE|ERRORTAG|YIELD)\\b"
				},
				{
					"name": "entity.name.method.mdcl",
					"match": "\\b(READ|LEN|READFILE|WRITEFILE|TYPE|ECHO|WAIT|GLOBALS|LOCALS|ARGV|NOT|EXIT)\\b"
				},
				{
					"name": "keyword.mdcl",
					"match": "\\b(ADD|SUB|MULT|DIV|PWR|EQ|LT|GT|LE|GE|INDEX|HAS|CALL)\\b"
				},
				{
					"name": "entity.name.function.mdcl",
					"match": "\\b(Integer|Float|String|RegexString|Timedelta|Date|Slice|Boolean|Array|Alphabet|Null)\\b"
				},
				{
					"name": "entity.name.tag.mdcl",
					"match": "(\\*|@|\\!|FILE|LINE|\\_|\\,|ERR|PATH)"
				},
				{
					"name": "entity.name.type.mdcl",
					"match": "\\b(INTEGER|FLOAT|STRING|REGEX|TIMEDELTA|DATE|SLICE|BOOLEAN|ARRAY|ALPHABET|NULL)\\b"
				}
			]
		},
		"blockComments": {
			"name": "comment.block.mdcl",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"strings": {
			"name": "string.quoted.double.mdcl",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "\\\\."
			}]
		},
		"rawstrings": {
			"name": "string.quoted.single.mdcl",
			"begin": "'",
			"end": "'"
		},
		"regexstringdouble": {
			"name": "keyword.mdcl",
			"begin": "\\bRE\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "."
			}]
		},
		"regexstringsingle": {
			"name": "keyword.mdcl",
			"begin": "\\bRE'",
			"end": "'",
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "."
			}]
		},
		"slices": {
			"name": "constant.language.mdcl",
			"begin": "\\(",
			"end": "\\)",
			"patterns": [{
				"name": "string.quoted.mdcl",
				"match": ":"
			}]
		},
		"greyopers": {
			"patterns": [{
				"name": "keyword.mdcl",
				"match": "(:|;|<|>|\\[|\\]|\\+|-|\\*|/|\\^|%|=|\\|)"
			}]
		},
		"squigglybrackets": {
			"patterns": [{
				"name": "constant.language.mdcl",
				"match": "(\\{|\\})"
			}]
		},
		"evaluations": {
			"name": "constant.language.mdcl",
			"begin": "`",
			"end": "`",
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "\\$\\{[0-9]*\\}"
			}]
		},
		"integers": {
			"patterns": [{
				"name": "constant.numeric.mdcl",
				"match": "(-|\\+)*[0-9]+"
			}]
		},
		"floats": {
			"patterns": [{
				"name": "constant.numeric.mdcl",
				"match": "(-|\\+)*[0-9]*\\.[0-9]+"
			}]
		},
		"explicitargs": {
			"patterns": [{
				"name": "constant.character.escape.mdcl",
				"match": "\\$[0-9]+"
			}]
		}
	},
	"scopeName": "source.mdcl"
}